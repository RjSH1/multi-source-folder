resources:
  - name: myRepo
    type: GITRepo
    configuration:
      path: deepikasl/jfrog_pipelines
      gitProvider: deepikaGithub
      branches:
        include: master
  
  - name: tempRepo
    type: GITRepo
    configuration:
      path: deepikasl/old-templates
      gitProvider: deepikaGithub
      branches:
        include: master

  - name: myTemplate
    type: FileSpec
    configuration:
      sourceArtifactory: art
      pattern: "deepika-artifacts/pipelines-template"
      recursive: false
      flat: true
      
pipelines:
  - name: Demo_template
    configuration:
      environmentVariables:
        readOnly:
          templateTarget: "templates/jfrog_name_space/myPipelineTemplate"
    steps:
      - name: validate_and_upload_template
        type: Bash
        configuration:
          inputResources:
            - name: myTemplate
            - name: tempRepo
        execution:
          onExecute:
            - pushd $res_tempRepo_resourcePath
            - pushd $templateTarget
            - touch values.yml
            - cp -vr $res_myTemplate_resourcePath/pipelines-template ./pipelines-template
            - chmod +x ./pipelines-template
            - ./pipelines-template apply --values-file ./values.yml --template-file ./templateDefinition.yml --output-file output.yml
            - cat output.yml
            - jfrog rt upload ./templateDefinition.yml pipeline-artifacts/$templateTarget/templateDefinition.yml --recursive=true
            - |
              if test -f "./values.yml.example"; then
                jfrog rt upload ./values.yml.example pipeline-artifacts/$templateTarget/values.yml.example --recursive=true
              fi
            - |
              if test -f "./readme.md"; then
                jfrog rt upload ./readme.md pipeline-artifacts/$templateTarget/readme.md --recursive=true
              fi
            - popd
            
#       - name: upload_template
#         type: Bash
#         configuration:
#           integrations:
#             - name: art
#           inputResources:
#             - name: tempRepo
#           inputSteps:
#             - name: validate_template
#         execution:
#           onExecute:
#             - pushd $res_tempRepo_resourcePath
#             - ls
#             - jfrog rt upload $templateTarget/templateDefinition.yml pipeline-artifacts/$templateTarget/templateDefinition.yml --recursive=true
#             - |
#               if test -f "$templateTarget/values.yml.example"; then
#                 jfrog rt upload $templateTarget/values.yml.example pipeline-artifacts/$templateTarget/values.yml.example --recursive=true
#               fi
#             - |
#               if test -f "$templateTarget/readme.md"; then
#                 jfrog rt upload $templateTarget/readme.md pipeline-artifacts/$templateTarget/readme.md --recursive=true
#               fi
# #             - jfrog rt upload $templateTarget/readme.md pipeline-artifacts/$templateTarget/readme.md --recursive=true
# #             - jfrog rt upload "templates/(*)/(*)/templateDefinition.yml" pipeline-artifacts/templates/{1}/{2}/templateDefinition.yml --recursive=true
# #             - jfrog rt upload "templates/(*)/(*)/values.yml.example" pipeline-artifacts/templates/{1}/{2}/values.yml.example --recursive=true
# #             - jfrog rt upload "templates/(*)/(*)/readme.md" pipeline-artifacts/templates/{1}/{2}/readme.md --recursive=true
#             - popd
