resources:  
  - name: {{ .Values.template_repository.name }}
    type: GITRepo
    configuration:
      path: {{ .Values.template_repository.path }}
      gitProvider: {{ .Values.git_integration_name }}
      branches:
        include: {{ .Values.template_repository.branch }}

  - name: goTemplateBinary
    type: FileSpec
    configuration:
      sourceArtifactory: art
      pattern: "deepika-artifacts/pipelines-template"
      recursive: false
      flat: true
      
pipelines:
  - name: {{ .Values.release_template.pipelineName }}
    configuration:
      environmentVariables:
        readOnly:
          templateTarget: {{ .Values.release_template.path }}
          version: {{ .Values.release_template.version }}
          repoPath: ''
          repoName: ''
    steps:
      - name: {{ .Values.release_template.stepName }}
        type: Bash
        configuration:
          inputResources:
            - name: goTemplateBinary
            - name: {{ .Values.template_repository.name }}
              trigger: false
          integrations:
            - name: {{ .Values.git_integration_name }}
        execution:
          onExecute:
              - providerUrl=$int_{{.Values.git_integration_name}}_url
              - repositoryUrl=$providerUrl/repos/$repoPath
              - normalizeRepoResult=$(curl --location --request GET $repositoryUrl \
--header 'Accept: application/vnd.GithubProvider.v3' \
--header 'Authorization: token $int_{{.Values.git_integration_name}}_token' \
--header 'Content-Type: application/json' \
--data-raw '')
              - mkdir -p cloneRepo
              - pushd cloneRepo
              - git clone $normalizeRepoResult.clone_url
#               - pushd $repoName
              - ls
              - popd
